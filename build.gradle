/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

    

subprojects {
	apply plugin: 'java'
	apply plugin: 'maven'
	
	version = '1.0.0'
	group = 'com.gaozl'
	
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

	sourceCompatibility = 1.7
	
	[compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
	
	configurations.all {
		resolutionStrategy {
		  // cache dynamic versions for 10 minutes
		  cacheDynamicVersionsFor 10*60, 'seconds'
		  // don't cache changing modules at all
		  cacheChangingModulesFor 0, 'seconds'
		}
	}
	
	//定义版本号
	ext {
        nexus_host='13.13.13.126';
        springBootVar = '1.4.5.RELEASE'  // correspond to spring 4.3.7.RELEASE;
    }
	
	
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url 'http://maven.springframework.org/release' }
        maven { url 'http://maven.springframework.org/milestone' }
    }
	
	
	uploadArchives {
		repositories {
			mavenDeployer {
				repository(url: "http://${nexus_host}:8081/nexus/content/repositories/releases/") {
					authentication(userName: "admin", password: "admin123")
				}
				snapshotRepository(url: "http://${nexus_host}:8081/nexus/content/repositories/snapshots/") {
					authentication(userName: "admin", password: "admin123")
				}
			}
		}
	}
	
	
    dependencies {
	    compile(
	    	"org.springframework.boot:spring-boot-starter-web:$springBootVar"
	    )
	
	    testCompile(
	    	'junit:junit:4.12',
	    	'org.easymock:easymock:3.4'
	    ) 
    }
    
    configurations {
        //all*.exclude group: 'commons-httpclient'
        //all*.exclude group: 'commons-logging'
        //all*.exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }
    
    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
		description = 'Build source jar'
		classifier = 'sources'
		from sourceSets.main.allSource
	}
	task javadocJar(type: Jar, dependsOn: javadoc) {
		classifier = 'javadoc'
		from 'build/docs/javadoc'
	}
	
	
	artifacts {
		archives jar
		archives javadocJar
		archives sourcesJar
	}
}

